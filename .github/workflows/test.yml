---
name: Test

on: push

permissions:
      contents: read
      packages: write
      statuses: write


jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    environment: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python 3
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Start Docker
        run: docker-compose -f docker-compose.test.yml up -d

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install poetry
        run: pip install poetry

      - name: Generate req.txt file.
        run : poetry export -f requirements.txt --output requirements.txt --with dev

      - name: Install dependencies.
        run: pip install -r requirements.txt

      - name: Check lint
        run: make lint

      - run: mkdir coverage

      - name: Test
        run: bash scripts/test.sh
        env:
          COVERAGE_FILE: coverage/.coverage.${{ runner.os }}-py${{ matrix.python-version }}
          CONTEXT: ${{ runner.os }}-py${{ matrix.python-version }}

      - name: Store coverage files
        uses: actions/upload-artifact@v3
        with:
          name: coverage
          path: coverage

  coverage-combine:
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          # Issue ref: https://github.com/actions/setup-python/issues/436
          # cache: "pip"
          # cache-dependency-path: pyproject.toml
      - name: Get coverage files
        uses: actions/download-artifact@v3
        with:
          name: coverage
          path: coverage
      - run: pip install coverage[toml]
      - run: ls -la coverage
      - run: coverage combine coverage
      - run: coverage report
      - run: coverage html --show-contexts --title "Coverage for ${{ github.sha }}"
      - name: Store coverage HTML
        uses: actions/upload-artifact@v3
        with:
          name: coverage-html
          path: htmlcov

  smokeshow:
    needs: [ coverage-combine ]
    runs-on: ubuntu-latest

    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - run: pip install smokeshow

      - uses: dawidd6/action-download-artifact@v2.27.0
        with:
          github_token: ${{ secrets.ALI_SMOKESHOW_DOWNLOAD_ARTIFACTS }}
          workflow: test.yml
          commit: ${{ github.event.workflow_run.head_sha }}

      - run: smokeshow upload coverage-html
        env:
          SMOKESHOW_GITHUB_STATUS_DESCRIPTION: Coverage {coverage-percentage}
          SMOKESHOW_GITHUB_COVERAGE_THRESHOLD: 100
          SMOKESHOW_GITHUB_CONTEXT: coverage
          SMOKESHOW_GITHUB_TOKEN: ${{ secrets.ALI_SMOKESHOW_DOWNLOAD_ARTIFACTS }}
          SMOKESHOW_GITHUB_PR_HEAD_SHA: ${{ github.event.workflow_run.head_sha }}
          #SMOKESHOW_AUTH_KEY: ${{ secrets.SMOKESHOW_AUTH_KEY }}
